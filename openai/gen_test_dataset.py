
import pandas as pd
from openai import OpenAI
import pandas as pd
import time
import signal
import datetime
from openai_test import format_test, predict_v2, store_predictions_v3

def signal_handler(sig, frame):
    status = client.fine_tuning.jobs.retrieve(job_id).status
    print(f"Stream interrupted. Job is still {status}.")
    return



# Load the Excel file
res = pd.DataFrame(columns=["text", "label", "source"])

def get_df(col_idx, label, source):
    df = pd.read_excel('AI-testing.xlsx', sheet_name=col_idx)
    df.dropna().iloc[:-1,0]
    label_col = pd.Series([label] * len(df), name='label')
    source_col = pd.Series([source] * len(df), name='source')
    return pd.DataFrame({'text': df.iloc[:, 0], 'label': label_col, "source": source_col})

new_data = get_df(0, "This message is written by Human", "Human")
res = pd.concat([res, new_data], ignore_index=True)

new_data = get_df(1, "This message is generated by AI", "GPT40")
res = pd.concat([res, new_data], ignore_index=True)

new_data = get_df(2, "This message is generated by AI", "3.5")
res = pd.concat([res, new_data], ignore_index=True)

new_data = get_df(3, "This message is generated by AI","4 rewrite")
res = pd.concat([res, new_data], ignore_index=True)

new_data = get_df(4, "This message is generated by AI", "3.5 rewrite")
res = pd.concat([res, new_data], ignore_index=True)

new_data = get_df(5, "This message is generated by AI", "gemini")
res = pd.concat([res, new_data], ignore_index=True)

new_data = get_df(6, "This message is generated by AI", "claude")
test_df = pd.concat([res, new_data], ignore_index=True)

print(res)

client = OpenAI(api_key="sk-roYuDSVuTABXZKbAM0dM_qrmqJpVwv1gYvcrBH6wxYT3BlbkFJrZWkOsRhO_DtGHgp_LK25lbIQA9Al22CPtNCYRnW8A")
result = client.fine_tuning.jobs.list()

job_id = "ftjob-Vcc7mJGwfRrYcbSElpjyG2n7"
print(job_id)


result = client.fine_tuning.jobs.list()
fine_tuned_model = result.data[0].fine_tuned_model

res_df = pd.DataFrame(columns=["Text", "Prediction", "GT", "Source"])
store_predictions_v3(test_df, fine_tuned_model, res_df, client)
